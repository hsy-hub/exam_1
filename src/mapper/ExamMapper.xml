<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.ExamMapper">

    <select id="getExamRecodeList" resultMap="resultMap1" parameterType="hashmap">
        SELECT e.id,e.`examName`,e.`examDecript`,g.`score`FROM exam e LEFT JOIN grade g ON g.examid=e.id AND g.`userid`=#{userid} WHERE e.classid=#{classid}
        <where>
            <if test="examName != null and examName != ''">
                and examName like '%${examName}%'
            </if>
        </where>
        limit #{pagestart},#{size}
    </select>


    <resultMap id="resultMap1" type="examUser">
        <id column="id" property="id"/>
        <result column="examName" property="examName"/>
        <result column="publisher" property="publisher"/>
        <result column="examDecript" property="examDecript"/>
        <result column="classid" property="classid"/>
        <result column="pubstauts" property="pubstauts"/>
        <result column="browsetype" property="browsetype"/>
        <result column="publicTime" property="publicTime"/>
        <result column="paperFile" property="paperFile"/>
        <result column="testAllTime" property="testAllTime"/>
        <result column="totalpoints" property="totalpoints"/>
        <association property="user" javaType="User">
            <id column="id" property="id"/>
            <result column="loginName" property="loginName"/>
        </association>
        <association property="grade" javaType="Grade">
            <id column="id" property="id"/>
            <result column="score" property="score"/>
        </association>
    </resultMap>

    <select id="getexamList" resultMap="resultMap1" parameterType="hashmap">
        SELECT e.*,u.id AS uid,u.loginName FROM exam e INNER JOIN user u ON e.publisher=u.id
        <where>
            <if test="examName != null and examName != ''">
                and examName like  '%${examName}%'
            </if>
        </where>
        limit #{pagestart},#{size}
    </select>

    <select id="examListCount" resultType="integer">
        select count(*) from exam
    </select>

    <delete id="deleteit" parameterType="examUser">
        delete from exam where id=#{id}
    </delete>

    <insert id="add" useGeneratedKeys="true" keyProperty="id" parameterType="ExamUser">
        insert into exam value (null,#{examName},#{examDecript},#{classid},#{pubstauts},#{testType},#{browsetype},#{publisher},#{release},null,#{paperFile},#{testAllTime},#{totalpoints})
    </insert>

    <insert id="insertPaper">
        insert into paper values
        <foreach collection="list" item="pl" separator=",">
            (#{pl.id},#{pl.examid},#{pl.title},#{pl.options},#{pl.answer})
        </foreach>
    </insert>

    <update id="updatePaperFile" parameterType="examUser">
        update exam set paperFile=#{paperFile} where id=#{id}
    </update>

    <select id="makePaper" resultType="list" parameterType="Integer">
        select * from paper where examid=#{examid}
    </select>

    <select id="getAnswer" resultType="string" parameterType="integer">
        select answer from paper where examid=#{examid}
    </select>

    <insert id="insertGrade" parameterType="Grade">
        insert into grade (id,score,examid,userid) values (null,#{score},#{examid},#{userid})
    </insert>
</mapper>